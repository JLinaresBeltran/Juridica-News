generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                     String              @id @default(cuid())
  email                  String              @unique
  password               String
  firstName              String              @map("first_name")
  lastName               String              @map("last_name")
  role                   String              @default("EDITOR")
  status                 String              @default("ACTIVE")
  avatar                 String?
  department             String?
  emailVerified          DateTime?           @map("email_verified")
  emailVerificationToken String?             @unique @map("email_verification_token")
  passwordResetToken     String?             @unique @map("password_reset_token")
  passwordResetExpires   DateTime?           @map("password_reset_expires")
  lastLogin              DateTime?           @map("last_login")
  createdAt              DateTime            @default(now()) @map("created_at")
  updatedAt              DateTime            @updatedAt @map("updated_at")
  articlesCreated        Article[]           @relation("ArticleAuthor")
  auditLogs              AuditLog[]
  documentsCreated       Document[]          @relation("DocumentCreator")
  documentsExtracted     Document[]          @relation("DocumentExtractor")
  extractionHistory      ExtractionHistory[]
  refreshTokens          RefreshToken[]

  @@map("users")
}

model RefreshToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String   @map("user_id")
  expiresAt DateTime @map("expires_at")
  createdAt DateTime @default(now()) @map("created_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

model Document {
  id                 String           @id @default(cuid())
  title              String
  url                String           @unique
  content            String
  summary            String?
  source             String
  legalArea          String           @map("legal_area")
  documentType       String           @map("document_type")
  status             String           @default("PENDING")
  priority           String           @default("NORMAL")
  publicationDate    DateTime         @map("publication_date")
  internalId         String?          @map("internal_id")
  extractionDate     DateTime         @default(now()) @map("extraction_date")
  lastReviewDate     DateTime?        @map("last_review_date")
  confidenceScore    Float            @default(0.0) @map("confidence_score")
  keywords           String           @default("")
  relevanceTags      String           @default("") @map("relevance_tags")
  externalId         String?          @unique @map("external_id")
  metadata           String           @default("{}")
  extractedAt        DateTime?        @map("extracted_at")
  userId             String?          @map("user_id")
  numeroSentencia    String?          @map("numero_sentencia")
  magistradoPonente  String?          @map("magistrado_ponente")
  salaRevision       String?          @map("sala_revision")
  expediente         String?          @map("expediente")
  temaPrincipal      String?          @map("tema_principal")
  resumenIA          String?          @map("resumen_ia")
  decision           String?          @map("decision")
  aiAnalysisStatus   String?          @default("PENDING") @map("ai_analysis_status")
  aiAnalysisDate     DateTime?        @map("ai_analysis_date")
  aiModel            String?          @map("ai_model")
  fragmentosAnalisis String?          @default("") @map("fragmentos_analisis")
  curatorId          String?          @map("curator_id")
  createdAt          DateTime         @default(now()) @map("created_at")
  updatedAt          DateTime         @updatedAt @map("updated_at")
  documentPath       String?          @map("document_path")
  fullTextContent    String?          @map("full_text_content")
  webOfficialDate    DateTime?        @map("web_official_date")
  articleGeneratedAt DateTime?        @map("article_generated_at")
  articleModel       String?          @map("article_model")
  articleStyle       String?          @map("article_style")
  generatedArticle   String?          @map("generated_article")
  generatedTitles    String?          @map("generated_titles")
  selectedTitle      String?          @map("selected_title")
  titleModel         String?          @map("title_model")
  titleStyle         String?          @map("title_style")
  titlesGeneratedAt  DateTime?        @map("titles_generated_at")
  articles           Article[]        @relation("ArticleSourceDocument")
  curator            User?            @relation("DocumentCreator", fields: [curatorId], references: [id])
  user               User?            @relation("DocumentExtractor", fields: [userId], references: [id])
  generatedImages    GeneratedImage[]

  @@map("documents")
}

model Article {
  id                      String           @id @default(cuid())
  title                   String
  slug                    String           @unique
  content                 String
  summary                 String
  metaTitle               String?          @map("meta_title")
  metaDescription         String?          @map("meta_description")
  keywords                String           @default("")
  canonicalUrl            String?          @map("canonical_url")
  status                  String           @default("DRAFT")
  legalArea               String           @default("CONSTITUCIONAL") @map("legal_area")
  publicationSection      String           @map("publication_section")
  tags                    String           @default("")
  publishedAt             DateTime?        @map("published_at")
  scheduledAt             DateTime?        @map("scheduled_at")
  isGeneral               Boolean          @default(false) @map("is_general")
  isUltimasNoticias       Boolean          @default(false) @map("is_ultimas_noticias")
  entidadSeleccionada     String?          @map("entidad_seleccionada")
  isDestacadoSemana       Boolean          @default(false) @map("is_destacado_semana")
  posicionGeneral         Int?             @map("posicion_general")
  posicionUltimasNoticias Int?             @map("posicion_ultimas_noticias")
  createdAt               DateTime         @default(now()) @map("created_at")
  updatedAt               DateTime         @updatedAt @map("updated_at")
  views                   Int              @default(0)
  likes                   Int              @default(0)
  wordCount               Int              @default(0) @map("word_count")
  readingTime             Int              @default(0) @map("reading_time")
  authorId                String           @map("author_id")
  sourceDocumentId        String?          @map("source_document_id")
  versions                ArticleVersion[]
  sourceDocument          Document?        @relation("ArticleSourceDocument", fields: [sourceDocumentId], references: [id])
  author                  User             @relation("ArticleAuthor", fields: [authorId], references: [id])
  generatedImages         GeneratedImage[]
  mediaAssets             MediaAsset[]

  @@map("articles")
}

model ArticleVersion {
  id                String   @id @default(cuid())
  articleId         String   @map("article_id")
  title             String
  content           String
  summary           String
  versionNumber     Int      @map("version_number")
  changeDescription String?  @map("change_description")
  createdAt         DateTime @default(now()) @map("created_at")
  article           Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@unique([articleId, versionNumber])
  @@map("article_versions")
}

model MediaAsset {
  id           String   @id @default(cuid())
  filename     String
  originalName String   @map("original_name")
  mimeType     String   @map("mime_type")
  size         Int
  path         String
  assetType    String   @map("asset_type")
  tags         String   @default("")
  altText      String?  @map("alt_text")
  caption      String?
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  articleId    String?  @map("article_id")
  article      Article? @relation(fields: [articleId], references: [id])

  @@map("media_assets")
}

model AuditLog {
  id          String   @id @default(cuid())
  action      String
  description String?
  ipAddress   String?  @map("ip_address")
  userAgent   String?  @map("user_agent")
  timestamp   DateTime @default(now())
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id])

  @@map("audit_logs")
}

model SystemConfig {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  category    String   @default("general")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("system_config")
}

model ExtractionHistory {
  id                 String    @id @default(cuid())
  source             String
  status             String
  parameters         String    @default("{}")
  documentsFound     Int       @default(0) @map("documents_found")
  documentsProcessed Int       @default(0) @map("documents_processed")
  executionTime      Float     @default(0.0) @map("execution_time")
  results            String    @default("{}")
  error              String?
  startedAt          DateTime  @default(now()) @map("started_at")
  completedAt        DateTime? @map("completed_at")
  userId             String?   @map("user_id")
  user               User?     @relation(fields: [userId], references: [id])

  @@map("extraction_history")
}

model GeneratedImage {
  id              String    @id @default(cuid())
  documentId      String?   @map("document_id")
  articleId       String?   @map("article_id")
  imageId         String    @unique @map("image_id")
  originalUrl     String    @map("original_url")
  localPath       String    @map("local_path")
  filename        String
  size            Int
  width           Int
  height          Int
  format          String
  model           String
  style           String
  prompt          String
  metaDescription String?   @map("meta_description")
  tags            String    @default("[]")
  savedToLibrary  Boolean   @default(false) @map("saved_to_library")
  isPublic        Boolean   @default(false) @map("is_public")
  usageCount      Int       @default(0) @map("usage_count")
  lastUsedAt      DateTime? @map("last_used_at")
  createdAt       DateTime  @default(now()) @map("created_at")
  article         Article?  @relation(fields: [articleId], references: [id])
  document        Document? @relation(fields: [documentId], references: [id], onDelete: Cascade)

  @@map("generated_images")
}
